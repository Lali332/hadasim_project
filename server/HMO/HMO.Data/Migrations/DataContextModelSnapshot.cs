// <auto-generated />
using System;
using HMO.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMO.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HMO.Core.Entities.CoronaDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DataRecover")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSick")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstVaccination")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FourhVaccination")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProducerFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProducerFourth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProducerSecond")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProducerThird")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SecondVaccination")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThirdVaccination")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CoronaDetails");
                });

            modelBuilder.Entity("HMO.Core.Entities.PersonalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoronaDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("FileData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pelephon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoronaDetailsId");

                    b.ToTable("PersonalDetails");
                });

            modelBuilder.Entity("HMO.Core.Entities.PersonalDetails", b =>
                {
                    b.HasOne("HMO.Core.Entities.CoronaDetails", "CoronaDetails")
                        .WithMany()
                        .HasForeignKey("CoronaDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoronaDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
